{
  "name": "x509",
  "version": "0.0.6",
  "description": "Simple X509 certificate parser.",
  "author": {
    "name": "Colton Baker"
  },
  "main": "./build/Release/x509",
  "repository": {
    "type": "git",
    "url": "http://github.com/Southern/node-x509"
  },
  "scripts": {
    "test": "node test/test",
    "install": "node-gyp rebuild"
  },
  "license": "MIT",
  "gypfile": true,
  "readme": "node-x509\n=========\n\n[![Build Status](https://secure.travis-ci.org/Southern/node-x509.png?branch=master)](http://travis-ci.org/Southern/node-x509)\n[![NPM version](https://badge.fury.io/js/x509.png)](http://badge.fury.io/js/x509)\n\nSimple X509 certificate parser.\n\n## Installation\n\nFrom NPM *(recommended)*: `npm install x509`\n\nBuilding and testing from source:\n```\nsudo npm install -g node-gyp\nnpm install\nnpm test\n```\n\n## Usage\nReading from a file:\n```js\nvar x509 = require('x509');\n\nvar issuer = x509.getIssuer(__dirname + '/certs/your.crt');\n```\n\nReading from a string:\n```js\nvar fs = require('fs'),\n    x509 = require('x509');\n\nvar issuer = x509.getIssuer(fs.readFileSync('./certs/your.crt').toString());\n```\n\n## Methods\n**Notes:**\n- `cert` may be a filename or a raw base64 encoded PEM string in any of these methods.\n\n\n#### x509.getAltNames(`cert`)\nParse certificate with `x509.parseCert` and return the alternate names.\n\n```js\nvar x509 = require('x509');\n\nvar altNames = x509.getAltNames(__dirname + '/certs/nodejitsu.com.crt');\n/*\naltNames = [ '*.nodejitsu.com', 'nodejitsu.com' ]\n*/\n```\n\n#### x509.getIssuer(`cert`)\nParse certificate with `x509.parseCert` and return the issuer.\n\n```js\nvar x509 = require('x509');\n\nvar issuer = x509.getIssuer(__dirname + '/certs/nodejitsu.com.crt');\n/*\nissuer = { countryName: 'GB',\n  stateOrProvinceName: 'Greater Manchester',\n  localityName: 'Salford',\n  organizationName: 'COMODO CA Limited',\n  commonName: 'COMODO High-Assurance Secure Server CA' }\n*/\n```\n\n#### x509.getSubject(`cert`)\nParse certificate with `x509.parseCert` and return the subject.\n\n```js\nvar x509 = require('x509');\n\nvar subject = x509.getSubject(__dirname + '/certs/nodejitsu.com.crt');\n/*\nsubject = { countryName: 'US',\n  postalCode: '10010',\n  stateOrProvinceName: 'NY',\n  localityName: 'New York',\n  streetAddress: '902 Broadway, 4th Floor',\n  organizationName: 'Nodejitsu',\n  organizationalUnitName: 'PremiumSSL Wildcard',\n  commonName: '*.nodejitsu.com' }\n*/\n```\n\n#### x509.parseCert(`cert`)\nParse subject, issuer, valid before and after date, and alternate names from certificate.\n\n```js\nvar x509 = require('x509');\n\nvar cert = x509.parseCert(__dirname + '/certs/nodejitsu.com.crt');\n/*\ncert = { subject: \n   { countryName: 'US',\n     postalCode: '10010',\n     stateOrProvinceName: 'NY',\n     localityName: 'New York',\n     streetAddress: '902 Broadway, 4th Floor',\n     organizationName: 'Nodejitsu',\n     organizationalUnitName: 'PremiumSSL Wildcard',\n     commonName: '*.nodejitsu.com' },\n  issuer: \n   { countryName: 'GB',\n     stateOrProvinceName: 'Greater Manchester',\n     localityName: 'Salford',\n     organizationName: 'COMODO CA Limited',\n     commonName: 'COMODO High-Assurance Secure Server CA' },\n  notBefore: Sun Oct 28 2012 20:00:00 GMT-0400 (EDT),\n  notAfter: Wed Nov 26 2014 18:59:59 GMT-0500 (EST),\n  altNames: [ '*.nodejitsu.com', 'nodejitsu.com' ] }\n*/\n```\n\n## Examples\nChecking the date to make sure the certificate is active:\n```js\nvar x509 = require('x509'),\n    cert = x509.parseCert('yourcert.crt'),\n    date = new Date();\n\nif (cert.notBefore > date) {\n  // Certificate isn't active yet.\n}\nif (cert.notAfter < date) {\n  // Certificate has expired.\n}\n```\n\n## License\nCopyright (c) 2013 Colton Baker\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Southern/node-x509/issues"
  },
  "_id": "x509@0.0.6",
  "dist": {
    "shasum": "b58747854ff33df7ff8f1653756bff6a32a8c838"
  },
  "_from": "x509@",
  "_resolved": "https://registry.npmjs.org/x509/-/x509-0.0.6.tgz"
}
